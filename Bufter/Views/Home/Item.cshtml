@using Bufter.Model
@model Tuple<IEnumerable<Room>, IEnumerable<Item>>
@{
	ViewData["Title"] = "Home";
}

<div class="row">
	<div class="col-md-8 text-center p-4">
		<div class="row">
			@foreach (Item item in Model.Item2)
			{
				<div class="col-md-3 p-2">
					<a asp-controller="Home" asp-action="Order" asp-route-Room="@Context.Request.Query["Room"]" asp-route-Person="@Context.Request.Query["Person"]" asp-route-Item="@item.Name" class="text-decoration-none text-black">
						<div class="card">
							@if (@item.Image != "")
							{
								<img src="~/uploads/@item.Image" class="card-img-top">
							}
							<div class="card-body">
								<h5 class="card-title">@item.Name</h5>
								<p class="card-text">@item.Description</p>
								<p class="card-text">@item.Count</p>
							</div>
						</div>
					</a>
				</div>
			}
		</div>

	</div>

	<div class="col-md-4 p-4 mt-4">
		<div class="btn-group-vertical" style="width: 100%">
			<a class="btn btn-primary" role="button" asp-controller="Home" asp-action="Room">Room: @Context.Request.Query["Room"]</a>
			<a class="btn btn-primary" role="button" asp-controller="Home" asp-action="Person" asp-route-Room="@Context.Request.Query["Room"]">Person: @Context.Request.Query["Person"]</a>
			<a class="btn btn-primary active" role="button" asp-controller="Home" asp-action="Item">Item</a>
		</div>
	</div>
</div>

